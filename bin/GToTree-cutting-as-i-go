


#############################################################################
######  GETTING AND BUILDING NEEDED KO STUFF IF USER WANTS KO SCANNING  #####
#############################################################################
if [ "$ko_targets" != 'false' ]; then

    printf "\n ############################################################################## \n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ####                     Setting up HMMs for KO targets                   ####\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ############################################################################## \n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )

    # making output dirs
    mkdir -p ${output_dir}/KO_search_results/target_KO_profiles/
    mkdir -p ${output_dir}/KO_search_results/KO_hit_seqs/
    mkdir -p ${output_dir}/KO_search_results/iToL_files/
    mkdir -p ${output_dir}/KO_search_results/individual_genome_results/

    gtt-parse-kofamscan-targets.sh ${target_KOs} ${output_dir}

fi


#############################################################################
##########  GETTING AND BUILDING ADDITIONAL TARGET PFAM HMM IF SET  #########
#############################################################################
if [ "$additional_pfam_targets" != 'false' ]; then

    printf "\n ############################################################################## \n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ####              Downloading HMMs for additional Pfam targets            ####\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ############################################################################## \n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )

    # making output dirs
    mkdir -p ${output_dir}/Pfam_search_results/target_Pfam_profiles/
    mkdir -p ${output_dir}/Pfam_search_results/Pfam_hit_seqs/
    mkdir -p ${output_dir}/Pfam_search_results/iToL_files/
    mkdir -p ${output_dir}/Pfam_search_results/individual_genome_results/
    mkdir -p ${output_dir}/Pfam_search_results/info/

    gtt-get-additional-pfam-targets.sh ${tmp_dir} ${output_dir}

fi



#############################################################################
################  COMBINING KO SEARCHING RESULTS IF NEEDED  #################
#############################################################################
if [ ${ko_targets} != 'false' ]; then

    printf "\n ############################################################################## \n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ##########            Combining KO searching results               ###########\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ############################################################################## \n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )

    gtt-combine-kofamscan-results.sh ${tmp_dir}/genomes_from_all_sources.tmp ${tmp_dir} ${output_dir} ${target_KOs}

    gtt-gen-KO-iToL-files.sh ${tmp_dir} ${output_dir}

fi


#############################################################################
##########  WRITING OUT ADDITIONAL TARGET PFAM RESULTS IF NEEDED  ###########
#############################################################################

if [ $additional_pfam_targets != 'false' ]; then

    printf "\n ############################################################################## \n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ####            Parsing results of additional Pfam searches               ####\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf " ############################################################################## \n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )

    gtt-gen-pfam-iToL-files.sh ${tmp_dir} ${output_dir}

fi


#############################################################################
##########################  JOB-FINISHED REPORTING  #########################
#############################################################################
printf "\n\n#################################################################################\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
printf "####                                 ${GREEN}Done!!${NC}                                  ####\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
printf "#################################################################################\n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )

## deleting as i go


if [ $ko_targets == 'true' ]; then
    printf "    Outputs from KO searching written to:\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf "        ${GREEN}${output_dir}/KO_search_results/${NC}\n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
fi

if [ $additional_pfam_targets == 'true' ]; then
    printf "    Outputs from Pfam searching written to:\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
    printf "        ${GREEN}${output_dir}/Pfam_search_results/${NC}\n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )
fi


# reporting any problem files/accessions and mentioning run_files/ directory
printf " _______________________________________________________________________________\n\n" | tee >( sed 's/\x1b\[[0-9;]*m//g' >> ${gtotree_log} )

