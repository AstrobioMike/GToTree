## next:


    # still need to implement iToL-file generation for both pfam and ko searching results
        # the per-genome rules in the snakefiles (search-kos.smk and search-pfams.smk) might be the best place to start the info needed for this (if it's not already done)
            # actually it's probably just easier to read in the <output_dir>/ko-search-results/KO-hit-counts.tsv table and make it based on that
        # be sure to take into account if we are modifying the genome names so the iToL files match the final alignment/tree files
        # make a helper function that does this, and it will take just the path to the table and if it's for KOs or PFams
            # if they have different formats it'd need a KO or PFam designation. If they are the same format, maybe not


    # go through general.py GenomeData and RunData classes and see which methods i put in that i'm not using anywhere anymore


    # incorporate latest changes from master GToTree
        # GTDB download needs no-cert-check added and flag for --use-ecogenomics


    # package conda recipe with repo like i did for bit


    # add a flag to stop auto-update-db checks by date
        # so like it won't automatically try to grab new ncbi/gtdb/KOFamScan data if older than X weeks like i have set in places


    # modularize and reduce code redundancy in my user-side standalone scripts like: 
        # gtt-get-accessions-from-GTDB
        # gtt-gen-SCG-set
        # gtt-pfam-search


    # figure out all helper scripts that are no longer needed and remove them


    # modularize and reduce code redundancy in any of my helper scripts still remaining


    # fix entry points/console scripts as needed in setup.py


    # unit tests..... :( :( :(


    # wherever I have this:
        # with tarfile.open(taxdump_path) as tarball:
            # tarball.extractall(location)
    # do this to get rid of warning message: 
        # with tarfile.open(tarball_path) as tarball:
            # tarball.extractall(path=location, filter=lambda ti: ti)


    # create new SCG-sets for all main phyla (and proteos) of gtdb (and archaea/bacteria)


conda create -n gtotree-dev -c astrobiomike -c conda-forge -c bioconda gtotree

conda activate gtotree-dev
conda install -c conda-forge -c bioconda tqdm=4.67.1 pyhmmer=0.11.0 snakemake=8.30.0 dendropy=5
pip install -e .

# example test
rm -rf gtotree-output/ ; gtotree2 -a ncbi-accessions.txt -H Universal -j 4

gtotree2 -a ncbi_accessions.txt -g genbank_files.txt -A amino_acid_files.txt -f fasta_files.txt -H Universal -j 4 -t -P

GToTree -a ncbi_accessions.txt -g genbank_files.txt -A amino_acid_files.txt -f fasta_files.txt -H Universal -j 4 -t -P -F

gtotree2 -a ncbi_accessions.txt -g GToTree-test-data/genbank_files.txt -f GToTree-test-data/fasta_files.txt -A GToTree-test-data/amino_acid_files.txt -j 4 -t -P

### OVERALL NOTES ###
# add a stop at "Summary of input-genome preprocessing" to check there are 3 or more as needed to make a tree
# eventually look into putting a block for this prodigal failure: "at least 100000 bases for training." (search original files)
    # maybe just make a check that input genomes are greater than 100,000 bases (if that consistently triggers it)
# eventually add a check that nucleotide fasta inputs are nucleotide and not amino acid, and vice versa

### TO DO ###

# switch to only using http when available
    # affects:
        # get_ncbi_assembly_tables.py (DONE)
        # ncbi assembly downloads (DONE)
        # kofamscan data is only available via ftp (maybe host this somewhere else for GToTree; if it rarely if ever changes)
            # looks like it does update regularly, i might just have to catch and report when this download fails and say it might be because it's only available via ftp


### CHANGES ###

# default output changed to "gtotree-output"
# default lineage settings are D,P,C,S (no longer strain)
# http is used instead of ftp always where available (used to be ftp by default with http option)
# several output files and dirs had underscores changed to dashes (sorry, i now hate underscores when they're not necessary)
# estimated percent completion and redundancy are no long provided
    # (this was always just "free" info, but checkm2 is a much better way to do this, so i made the decision to stop providing it at all)
# --resume flag added (will be set automatically if the same output dir but no `-F` flag provided)
# taxids are no longer searched for in input genbank files, they will only be found/used for provided input ncbi-accessions
    # if this is actually a feature that benefitted anyone, i'll add it back in upon request :)
# the order of processing changed slightly from v1 to v2, so the output report messages vary a little
    # in v1, each genome was downloaded/parsed and scanned for the target genes in one pass
    # in v2, all input genomes are prepared for each input source, then all are searched together
# there are no longer separate summary tables for each input-genome source (accessions, fasta files, genbank files, and amino-acid files)
    # they are all represented in the primary "genomes-summary-info.tsv" table, which includes a "source" column

### PLACES TO DEF IMPROVE ###


### IMPROVEMENTS to highlight in paper ###

# python packaging and structure (rather than 4,000 lines of bash as main runner with dozens of individual python and bash helper scripts for a total of X lines)
# instead of just exiting and informing when input files have problems, GToTree2 fixes them
    # e.g., duplicate entries will be unique'd, windows line-endings will be converted, changes written to a new file that is then used
# snakemake control over the main components for easier restart capabilities
# things i've added over time
    # gtt-gen-SCG-HMMs
    # gtt-get-GTDB-accessions
    # gtt-subset...
    # new prepackaged HMMs based on GTDB taxonomy (originals, based on NCBI, still available)
    # in tandem scanning of target KOs or pfams, files for added vizualization in iToL
    # pre-built HMMs stored remotely and downloaded when used, to slim package size and install time
    # partitions.txt file produced suitable for mixed-model treeing like with iqtree


### """
# In its first 6 years, the original GToTree received over 500 citations and has been
# successfully continually maintained over this time despite its foundation being a main runner 
# of ~4,000 lines of BASH and dozens of independent python and BASH helper scripts with a lot 
# of redundancy in its code base. Among several other improvements and feature additions, GToTree 
# has now been rewritten from the ground up in python with its major stages being powered by 
# Snakemake workflows - enabling the resuming of failed or interrupted runs. This paper highlights
# some of the new additions to GToTree since its initial launch.
### """
